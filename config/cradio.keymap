/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        alt+s {
            bindings = <&kp LA(S)>;
            key-positions = <11 12>;
        };

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <33 32>;
        };
    };

    macros {
        TOPdesk_prio: TOPdesk_prio {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp TAB &kp L &kp TAB &kp L &kp TAB &kp TAB &kp TAB &kp TAB>;
            label = "TOPDESK_PRIO";
        };

        BRP_afhandel: BRP_afhandel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A &kp T &kp E &kp R &kp N &kp TAB &kp N &kp TAB &kp TAB &kp TAB>;
            label = "BRP_AFHANDEL";
        };

        secret1: secret1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp A &kp R &kp I &kp N &kp G &kp E &kp N>;
            label = "SECRET1";
        };

        secret2: secret2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N3 &kp QMARK>;
            label = "SECRET2";
        
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W       &kp E        &kp R        &kp T                          &kp Y  &kp U        &kp I        &kp O       &kp P
&hm LGUI A   &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G                          &kp H  &hm RSHFT J  &hm RCTRL K  &hm LALT L  &hm LGUI SEMICOLON
&kp Z        &kp X       &kp C        &kp V        &kp B                          &kp N  &kp M        &kp COMMA    &kp DOT     &kp QUESTION
                                      &lt 1 SPACE  &kp ENTER                      &kp SPACE  &mo 2
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2  &kp N3  &kp N4  &kp N5                           &kp N6         &kp N7  &kp N8  &kp N9  &kp PLUS
&kp LA(Q)  &trans  &trans  &trans  &trans                           &trans         &kp N4  &kp N5  &kp N6  &kp MINUS
&trans     &trans  &trans  &trans  &trans                           &kp BACKSPACE  &kp N1  &kp N2  &kp N3  &kp EQUAL
                           &trans  &kp ENTER                        &kp DELETE  &kp N0
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans       &trans         &trans
&trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT  &kp DOWN     &kp UP_ARROW   &kp RIGHT
&trans  &trans  &trans  &trans  &trans                    &trans  &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END
                        &trans  &trans                    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans    &trans    &trans  &trans                    &trans  &trans           &trans  &kp K_MUTE    &trans
&trans  &secret1  &secret2  &trans  &trans                    &trans  &trans           &trans  &kp C_VOL_DN  &trans
&trans  &trans    &trans    &trans  &trans                    &trans  &kp C_VOLUME_UP  &trans  &trans        &trans
                            &trans  &trans                    &trans  &trans
            >;
        };
    };
};
